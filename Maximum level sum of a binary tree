/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        int level  = 0;
        int maxSum = Integer.MIN_VALUE;
        int ind = 0;
        if(root == null){
            return 0;
        }
        q.add(root);
        
        while(!q.isEmpty()){
            
            int size = q.size();
            int sum = 0;
            for(int i = 0;i<size;i++){
                TreeNode temp = q.remove();
                sum+=temp.val;
                if(temp.left!=null){
                    q.add(temp.left);
                }
                if(temp.right!=null){
                    q.add(temp.right);
                }
            }
            level+=1;
            if(sum>maxSum){maxSum = sum;ind = level;}
        }
        return ind;
    }
}
