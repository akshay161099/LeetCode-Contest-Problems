/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        ListNode odd = head;
        if(head == null){
            return null;
        }
        if(head.next == null){
            return head;
        }
        ListNode even = head.next;
        ListNode tempOdd = head;
        ListNode tempEven = head.next;
        int count = 1;
        ListNode curr = head.next.next;
        while(curr!=null){
            if(count%2 != 0){
                tempOdd.next = curr;
                tempOdd = curr;
            }
            else{
                tempEven.next = curr;
                tempEven = curr;
            }
            curr = curr.next;
            count+=1;
        }
        if(tempOdd.next!=null){
            tempOdd.next = null;
        }
        if(tempEven.next!=null){
            tempEven.next = null;
        }
        tempOdd.next = even;
        return odd;
    }
}
